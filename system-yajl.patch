--- ffi-yajl-1.2.0/lib/ffi_yajl/ffi.rb~	2014-11-12 23:07:49.846221611 +0200
+++ ffi-yajl-1.2.0/lib/ffi_yajl/ffi.rb	2014-11-12 23:13:10.000000000 +0200
@@ -1,23 +1,10 @@
-require 'rubygems'
-
-require 'libyajl2'
 require 'ffi'
 
 module FFI_Yajl
   extend ::FFI::Library
 
   libname = ::FFI.map_library_name("yajl")
-  # XXX: need to replace ::FFI.map_library_name here as well
-  libname = "libyajl.so" if libname == "yajl.dll"
-  libpath = File.expand_path(File.join(Libyajl2.opt_path, libname))
-  libpath.gsub!(/dylib/, 'bundle')
-
-  if File.file?(libpath)
-    # use our vendored version of libyajl2 if we find it installed
-    ffi_lib libpath
-  else
-    ffi_lib 'yajl'
-  end
+  ffi_lib 'yajl.so.2'
 
   class YajlCallbacks < ::FFI::Struct
     layout :yajl_null, :pointer,
--- ruby-ffi-yajl-1.3.1/lib/ffi_yajl/ext.rb	2015-01-22 13:55:11.513182150 +0200
+++ ruby-ffi-yajl-1.3.1/lib/ffi_yajl/ext.rb	2015-01-22 13:55:53.882526948 +0200
@@ -3,18 +3,9 @@
 require 'ffi_yajl/encoder'
 require 'ffi_yajl/parser'
 require 'ffi'
-require 'libyajl2'
 
 module FFI_Yajl
-  # FIXME: DRY with ffi_yajl/ffi.rb
-  # FIXME: extract map_library_name from FFI and stop requiring it at the top level
-  #        so that the C-library can be installed without FFI
-  libname = ::FFI.map_library_name("yajl")
-  # awful windows patch, but there is an open issue to entirely replace FFI.map_library_name already
-  libname = "libyajl.so" if libname == "yajl.dll"
-  libpath = File.expand_path(File.join(Libyajl2.opt_path, libname))
-  libpath.gsub!(/dylib/, 'bundle')
-  libpath = ::FFI.map_library_name("yajl") unless File.exist?(libpath)
+  libpath = 'libyajl.so.2'
 
   #
   # FFS, what exactly was so wrong with DL.dlopen that ruby had to get rid of it???
--- ffi-yajl-1.2.0/ext/ffi_yajl/ext/encoder/extconf.rb~	2014-11-12 23:19:03.000000000 +0200
+++ ffi-yajl-1.2.0/ext/ffi_yajl/ext/encoder/extconf.rb	2014-11-12 23:20:13.882893756 +0200
@@ -1,13 +1,8 @@
 require 'mkmf'
 require 'rubygems'
-require 'libyajl2'
 
 RbConfig::MAKEFILE_CONFIG['CC'] = ENV['CC'] if ENV['CC']
 
-# pick up the vendored libyajl2 out of the libyajl2 gem
-$CFLAGS = " -I#{Libyajl2.include_path} #{$CFLAGS}"
-$LDFLAGS = " -L#{Libyajl2.opt_path} #{$LDFLAGS}"
-
 # remove "-Wl,--no-undefined" flag if existent to allow for loading with dlopen
 $LDFLAGS.slice!("-Wl,--no-undefined")
 
--- ffi-yajl-1.2.0/ext/ffi_yajl/ext/parser/extconf.rb~	2014-11-12 23:19:03.000000000 +0200
+++ ffi-yajl-1.2.0/ext/ffi_yajl/ext/parser/extconf.rb	2014-11-12 23:20:29.100220591 +0200
@@ -1,13 +1,8 @@
 require 'mkmf'
 require 'rubygems'
-require 'libyajl2'
 
 RbConfig::MAKEFILE_CONFIG['CC'] = ENV['CC'] if ENV['CC']
 
-# pick up the vendored libyajl2 out of the libyajl2 gem
-$CFLAGS = "-I#{Libyajl2.include_path} #{$CFLAGS}"
-$LDFLAGS = "-L#{Libyajl2.opt_path} #{$LDFLAGS}"
-
 # remove "-Wl,--no-undefined" flag if existent to allow for loading with dlopen
 $LDFLAGS.slice!("-Wl,--no-undefined")
 
